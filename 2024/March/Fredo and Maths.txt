function power(a, b, mod):
    ret = 1
    while b is not 0:
        if b bitAND 1:
            ret = ret * a mod mod
        a = a * a mod mod
        b >>= 1
    return ret

function solve(x, k, m):
    if k is 0:
        return 1
    if m is 1:
        return 0
    return power(x, solve(x, k - 1, etf[m]), m)

function main():
    t = read_integer()
    etf[1] = 1
    for i from 2 to 10000000:
        if prime[i] is 0:
            etf[i] = i - 1
            for j from 1 to 10000000 / i:
                if prime[j * i] is 0:
                    prime[j * i] = i
        else:
            etf[i] = etf[prime[i]] * etf[i / prime[i]]
            g = 1
            if i mod (prime[i] * prime[i]) is 0:
                g = prime[i]
            etf[i] *= g
            etf[i] /= etf[g]
    while t is not 0:
        x, k, m = read_integers()
        print(solve(x, k, m))
        t -= 1
